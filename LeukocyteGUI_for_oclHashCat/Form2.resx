<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListConvertStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListConvertStatus.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADu
        CAAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAxoBJgI2AWEBqQIxATYBXCAAAjMBOwFpAjYBXQGlAxQBHMQAAxwBKQIg
        AX0BzwI2AfEB/wIRAcIB9wIyATsBZxcAAQECNAFCAXgCDwHJAfwCLwHqAf8CJQFtAcIDFQEdFAADEgEY
        ATIBPQE3AWsDCgENoAACMgFWAZkCBwHgAf8CRwH1Af8CSwHwAf8CAwHEAfwCNAFCAXgMAAMEAQYCNAFK
        AYsCBAHNAf8CWQHvAf8CWQH0Af8CCAHZAf8CNAFIAYEQAAMMARABMQFnAUkBtQFTAeQBlgH/ATUBWgFF
        AaADBgEInAACLwFsAa0CIQH+Af8CNgL/AlgC/wJJAe0B/wIEAccB/wI0AUgBiAMBAQIDCAELAjEBUwGd
        AgcBzgH/AlkB7QH/AnIC/wJUAv8CNQH9Af8CNQFYAZUMAAMKAQ4BMAFfAUIBrwFVAeUBlQH/AZ4B/gHL
        Af8BgQHpAbEB/wE0AVMBPwGaAwQBBpgAAjQBRwFrAhwC/wIqAv8COAL/AlUC/wJEAesB/wIEAcQB/wIy
        AU4BmQIuAVgBqgIIAcsB/wJTAe0B/wJpAv8CTwL/AkAC/wIzAv4CLwE3AVQIAAMJAQwBMQFZAT8BqgEs
        AdcBcgH/AUkB6QGIAf8BbQHvAacB/wGfAf0BzgH/AWYB3gGbAf8BNAFOAT0BlQMDAQSYAAI1AUsBcAId
        Av8CKgL/AjQC/wJJAv8CNgHoAf8CAAG7Af8CBQHAAf8CQwHtAf8CVwL/AkYC/wI9Av8CMQHuAfYCMQE7
        AVkIAAMHAQoBMAFTATsBpQEUAcgBWQH/AQsB2QFTAf8BJAHdAWcB/wFNAecBiwH/AWMB7QGeAf8BbgHy
        AacB/wE/Ac4BdwH/ATQBSgE7AZADAgEDmAACMgE/AV8CHQH0AfkCLgL/AjsC/wJNAv8CMAHoAf8CNgHt
        Af8CSgL/AjcC/wIxAv8CLwHcAewCKgEvAUYIAAMHAQoBMQFOAToBoAEGAbkBRwH/AQEBywFCAf8BAAHN
        AT0B/wEEAdYBTAH/ASIB3QFlAf8BMQHhAXMB/wEtAeABcAH/ASYB4gFsAf8BGQG+AVQB/wE0AUYBOQGL
        AwEBApgAAisBMgFJAkIB1gHqAmAC/wJfAv8CXwL/AmEC/wJhAv8CWgL/AjcBuwHZAiABIgExDAABNAFG
        ATgBiQEAAakBMwH/AQABvAEyAf8BBgHCATwB/wEbAc4BUwH/AScB2AFhAf8BJwHiAWcB/wE4Ad8BcgH/
        AS4B3AFqAf8BFwHXAVcB/wEKAdUBTwH/AQcBrQE+Af8BNAFDATcBhQMBAQKUAAMVAR0CHgF9AdcCPAH0
        Af8CYgL/AmIC/wJjAv8CYwL/AjUB7QH/Ai0BYAG3AwYBCAwAASYBbQE2AcMBCAG3ATAB/wE3AcMBWAH/
        AVwB0wF8Af8BaQHdAYsB/wE2AcwBZAH7ATEBdgFFAbEBQAHaAXEB/wFrAeQBkgH/AWIB3gGKAf8BVwHa
        AX4B/wEoAc8BWwH/AQABoAErAf8BNAFEATYBjgMBAQKMAAMcASkCHwFdAdACAAGmAf8CMAHyAf8CagL/
        AmkC/wJpAv8CaAL/AiAB5gH/AgABmAH/Ai0BTAGtAwsBDwgAATIBPQEzAWUBNwG/AVAB/wGMAdwBngH/
        AYkB3gGeAf8BRgHUAWwB/wEzAUUBOAFvBAABNQFNATwBegFVAeABfgH/AYgB5AGjAf8BggHfAZ0B/wGA
        AdwBlwH/ATMByAFbAf8BAAGPARkB/wE0AUABNAGJAwEBAoQAAx0BKwIdAVkB1AIAAaQB/wI2AfMB/wJ4
        Av8CdwL/AngC/wJ4Av8CdwL/AnMC/wIlAeUB/wIAAZIB/wItAUkBrQMMARAIAAE0AUMBNgFxAWUBzgF5
        Af8BXQHSAXcB/wE0AUcBOAF2DAABNgFPATwBgAFqAd8BigH/AaYB5wG2Af8BngHhAa4B/wGdAd8BqgH/
        AT4BvgFZAf8BAAF7AQcB/wE0ATwBNAF4gAADFAEbAh4BVQHSAgABnAH/AkEB8gH/AooC/wKJAv8CiAL/
        AkIBkQG8Ak8BtAHUAo0C/wKIAv8ChAL/AikB4wH/AgABiwH/AjABRwGkAwQBBQgAATQBSQE4AXcBNAFL
        ATkBehQAATcBUAE7AYQBggHfAZgB/wHEAe0BzQH/AbwB5gHEAf8BuAHkAb4B/wFJAbsBWQH/ASUBWwEn
        AcSAAAIrAS0BSQIAAZwB/wJIAfIB/wKbAv8CmQL/ApkC/wJGAYcBsgMEAQYCFwEYASECWAG+AdsCngL/
        ApkC/wKUAv8CLgHlAf8CCgF5AfIDEgEZKAABNwFQATsBiAGbAeMBpwH/AeMB9QHmAf8B5gH2AekB/wGP
        AdYBlQH/ATQBSgE2AYWAAAIpAS0BRQJUAf4B/wKuAv8CqQL/AqgC/wJJAYYBsgMHAQkIAAIaARsBJQJf
        Ab4B2wKvAv8CqQL/AqkC/wI3AdIB9AMQARYsAAE4AVEBOwGNAbsB6QHAAf8BtQHkAbgB/wE4AVYBOQGa
        AwQBBoAAAwoBDQJMAYQBrgK7Av8CuwL/AkoBhQGwAwcBCRAAAhoBGwElAmYBvgHbAsgC/wKkAv8CPAFS
        AXgDAQECLwABAQE3AVsBOwGfATYBXwE3AaoDAwEEiAADBAEGAkkBgQGpAkwBhwGtAwUBBxgAAhoBGwEl
        AlkBsQHMAjoBTQFyyAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAY8B8QL/
        BAABBwHAAfgB/wQAAQMBgAHwAX8GAAHgAT8GAAHAAR8EAAGAAQEBgAEPBAABwAEDAQABBwQAAeABBwEA
        AQMEAAHgAQcBAAEBBAABwAEDAQIFAAGAAQEBhwcAAc8BgAYAAf8BwAQAAQEBgAH/AeAEAAEDAcAB/wHh
        BAABhwHjAv8EAAs=
</value>
  </data>
</root>