<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListConvertStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListConvertStatus.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACE
        CAAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAxsBJgJPAVUBqQM4AVwgAAM9AWkCTwFTAaUDFAEcxAADHQEpAkwBaAHP
        AjMB8QH/AhwBsQH3AzwBZxcAAQEDQwF4AhIBwAH8AiwB6gH/Ak0BXAHCAxUBHRQAAxIBGAM+AWsDCgEN
        oAACTQFOAZkCBAHgAf8CRAH1Af8CSAHwAf8CBgG8AfwDQwF4DAADBAEGAkkBSgGLAgEBzQH/AlYB7wH/
        AlYB9AH/AgUB2QH/AkYBRwGBEAADDAEQAVIBWQFTAbUBUAHkAZYB/wFPAlEBoAMGAQicAAJRAVcBrQIe
        Af4B/wIzAv8CVQL/AkYB7QH/AgEBxwH/A0gBiAMBAQIDCAELAk0BUAGdAgQBzgH/AlYB7QH/Am8C/wJR
        Av8CMgH9Af8CTQFOAZUMAAMKAQ4BTwFWAVIBrwFSAeUBlQH/AZ4B/gHLAf8BgQHpAbEB/wFOAVABTgGa
        AwQBBpgAAz4BawIZAv8CJwL/AjUC/wJSAv8CQQHrAf8CAQHEAf8CTQFOAZkCUAFTAaoCBQHLAf8CUAHt
        Af8CZgL/AkwC/wI9Av8CMwH4Af4DNAFUCAADCQEMAVABUwFRAaoBKQHXAW8B/wFGAekBiAH/AWoB7wGn
        Af8BnwH9Ac4B/wFjAd4BmwH/AU0BTgFNAZUDAwEEmAADQAFwAhoC/wInAv8CMQL/AkYC/wIzAegB/wIA
        AbsB/wICAcAB/wJAAe0B/wJUAv8CQwL/AjoC/wI0AdEB9gM2AVkIAAMHAQoBTwFTAU8BpQERAcgBVgH/
        AQgB2QFQAf8BIQHdAWQB/wFKAecBiwH/AWAB7QGeAf8BawHyAacB/wE8Ac4BdAH/A0sBkAMCAQOYAAM5
        AV8CIwHeAfkCKwL/AjgC/wJKAv8CLQHoAf8CMwHtAf8CRwL/AjQC/wIuAv8CQgGwAewDLQFGCAADBwEK
        AU8BUQFPAaABAwG5AUQB/wEAAcsBPwH/AQABzQE6Af8BAQHWAUkB/wEfAd0BYgH/AS4B4QFwAf8BKgHg
        AW0B/wEjAeIBaQH/ARYBvgFRAf8BSQFKAUkBiwMBAQKYAAMvAUkCTQGkAeoCXQL/AlwC/wJcAv8CXgL/
        Al4C/wJXAv8CTQGBAdkCIQEiATEMAANJAYkBAAGpATAB/wEAAbwBLwH/AQMBwgE5Af8BGAHOAVAB/wEk
        AdgBXgH/ASQB4gFkAf8BNQHfAW8B/wErAdwBZwH/ARQB1wFUAf8BBwHVAUwB/wEEAa0BOwH/A0gBhQMB
        AQKUAAMVAR0CRgFpAdcCOQH0Af8CXwL/Al8C/wJgAv8CYAL/AjIB7QH/AlIBWAG3AwYBCAwAAU8BXQFT
        AcMBBQG3AS0B/wE0AcMBVQH/AVkB0wF5Af8BZgHdAYsB/wEzAcIBXwH7AVEBWgFTAbEBPQHaAW4B/wFo
        AeQBkgH/AV8B3gGKAf8BVAHaAXsB/wElAc8BWAH/AQABoAEoAf8DSwGOAwEBAowAAx0BKQJJAV0B0AIA
        AaYB/wItAfIB/wJnAv8CZgL/AmYC/wJlAv8CHQHmAf8CAAGYAf8CUQFTAa0DCwEPCAADOwFlATQBvwFN
        Af8BjAHcAZ4B/wGJAd4BngH/AUMB1AFpAf8BPwFAAT8BbwQAA0QBegFSAeABewH/AYgB5AGjAf8BggHf
        AZ0B/wGAAdwBlwH/ATAByAFYAf8BAAGPARYB/wNJAYkDAQEChAADHgErAkgBXAHUAgABpAH/AjMB8wH/
        AnUC/wJ0Av8CdQL/AnUC/wJ0Av8CcAL/AiIB5QH/AgABkgH/AlEBUwGtAwwBEAgAA0ABcQFiAc4BdgH/
        AVoB0gF0Af8DQgF2DAABRgFHAUYBgAFnAd8BigH/AaYB5wG2Af8BngHhAa4B/wGdAd8BqgH/ATsBvgFW
        Af8BAAF4AQQB/wNDAXiAAAMUARsCSQFZAdICAAGcAf8CPgHyAf8CigL/AokC/wKIAv8CUwFhAbwCWAF6
        AdQCjQL/AogC/wKEAv8CJgHjAf8CAAGLAf8CTgFQAaQDBAEFCAADQwF3A0QBehQAA0gBhAGCAd8BmAH/
        AcQB7QHNAf8BvAHmAcQB/wG4AeQBvgH/AUYBuwFWAf8BTwFbAU8BxIAAAy8BSQIAAZwB/wJFAfIB/wKb
        Av8CmQL/ApkC/wJUAVwBsgMEAQYDGAEhAloBhQHbAp4C/wKZAv8ClAL/AisB5QH/AiEBcgHyAxIBGSgA
        AUgBSQFIAYgBmwHjAacB/wHjAfUB5gH/AeYB9gHpAf8BjwHWAZUB/wNIAYWAAAMtAUUCUQH+Af8CrgL/
        AqkC/wKoAv8CVAFcAbIDBwEJCAADGgElAl8BhQHbAq8C/wKpAv8CqQL/Aj4BtwH0AxABFiwAA0oBjQG7
        AekBwAH/AbUB5AG4Af8BTgFQAU4BmgMEAQaAAAMKAQ0CUwFaAa4CuwL/ArsC/wJTAVoBsAMHAQkQAAMa
        ASUCYQGFAdsCyAL/AqQC/wNDAXgDAQECLwABAQFOAVEBTgGfAVABVAFQAaoDAwEEiAADBAEGAlIBVwGp
        AlMBWQGtAwUBBxgAAxoBJQJZAXMBzANBAXLIAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AQABjwHxAv8EAAEHAcAB+AH/BAABAwGAAfABfwYAAeABPwYAAcABHwQAAYABAQGAAQ8EAAHA
        AQMBAAEHBAAB4AEHAQABAwQAAeABBwEAAQEEAAHAAQMBAgUAAYABAQGHBwABzwGABgAB/wHABAABAQGA
        Af8B4AQAAQMBwAH/AeEEAAGHAeMC/wQACw==
</value>
  </data>
</root>