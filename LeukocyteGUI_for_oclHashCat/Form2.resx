<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListConvertStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListConvertStatus.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADw
        CwAAAk1TRnQBSQFMAgEBBAEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8ApgADGwEmAlEBUwGp
        AzgBXCAAAz0BaQJPAVMBpQMUARxUAAMIAQoYAAMFAQcDBAEGTAADHQEpAlIBZAHPAjIB8QH/Ah8BqwH3
        AzwBZxcAAQEDQwF4AhMBvQH8AisB6gH/AlIBWgHCAxUBHRQAAxIBGAM+AWsDCgENLAADLwFKAzwB5AMv
        AUoQAAMQARUDQQHRA0QBnSAAAwgBCgMyAf8DMgH/IAADTgGZAgMB4AH/AkMB9QH/AkcB8AH/AgcBugH8
        A0MBeAwAAwQBBgNKAYsCAAHNAf8CVQHvAf8CVQH0Af8CBAHZAf8CRgFHAYEQAAMMARABUwFWAVQBtQFP
        AeQBlgH/A1EBoAMGAQgkAAMqAT4DNQH1AzIB/wM1AfUDMgFQCAADFgEeA0IBxAMyAf8DMgH/A0QBnQME
        AQYUAAMIAQoDMgH/AzIB/wMyAf8DRAG0HAACUwFVAa0CHQH+Af8CMgL/AlQC/wJFAe0B/wIAAccB/wNI
        AYgDAQECAwgBCwJPAVABnQIDAc4B/wJVAe0B/wJuAv8CUAL/AjEB/QH/Ak0BTgGVDAADCgEOAVIBVAFT
        Aa8BUQHlAZUB/wGeAf4BywH/AYEB6QGxAf8BTwFQAU8BmgMEAQYgAAMyAVADNAH9AzIB/wMyAf8DMgH/
        AzEBTQMJAQwDQgHLAzIB/wMyAf8DMgH/A0EB0QMFAQcQAAMIAQoDMgH/AzIB/wMyAf8DMgH/AzIB/wMW
        AR4YAAM+AWsCGAL/AiYC/wI0Av8CUQL/AkAB6wH/AgABxAH/A04BmQJRAVMBqgIEAcsB/wJPAe0B/wJl
        Av8CSwL/AjwC/wIzAfYB/gM0AVQIAAMJAQwBUQFTAVIBqgEoAdcBbgH/AUUB6QGIAf8BaQHvAacB/wGf
        Af0BzgH/AWIB3gGbAf8BTQFOAU0BlQMDAQQcAAMEAQYDQAF6AzIB/wMyAf8DMgH/AzgB8AM+AdcDMgH/
        AzIB/wMyAf8DQgHEAxABFRAAAwgBCgMyAf8DMgH/AzIB/wNDAcADMgH/AzIB/wMyAf8cAANAAXACGQL/
        AiYC/wIwAv8CRQL/AjIB6AH/AgABuwH/AgEBwAH/Aj8B7QH/AlMC/wJCAv8COQL/AjUByQH2AzYBWQgA
        AwcBCgFPAVMBTwGlARAByAFVAf8BBwHZAU8B/wEgAd0BYwH/AUkB5wGLAf8BXwHtAZ4B/wFqAfIBpwH/
        ATsBzgFzAf8DSwGQAwIBAyAAA0IBgAMyAf8DMgH/AzIB/wMyAf8DMgH/AzIB/wNCAcsDFgEeFAADMgH/
        AzIB/wMyAf8DRAG9BAADRQGmAzIB/wMyAf8DQgHFHAADOQFfAiQB2AH5AioC/wI3Av8CSQL/AiwB6AH/
        AjIB7QH/AkYC/wIzAv8CLQL/AkYBpQHsAy0BRggAAwcBCgNRAaABAgG5AUMB/wEAAcsBPgH/AQABzQE5
        Af8BAAHWAUgB/wEeAd0BYQH/AS0B4QFvAf8BKQHgAWwB/wEiAeIBaAH/ARUBvgFQAf8DSgGLAwEBAiAA
        Az4BdAMyAf8DMgH/AzIB/wMyAf8DPgHXAwkBDBgAAwkBDAMyAf8DRAG9DAADMgH/AzIB/wMyAf8DHwEr
        HAADLwFJAlABmQHqAlwC/wJbAv8CWwL/Al0C/wJdAv8CVgL/AlIBeAHZAiEBIgExDAADSQGJAQABqQEv
        Af8BAAG8AS4B/wECAcIBOAH/ARcBzgFPAf8BIwHYAV0B/wEjAeIBYwH/ATQB3wFuAf8BKgHcAWYB/wET
        AdcBUwH/AQYB1QFLAf8BAwGtAToB/wNIAYUDAQECGAADFgEeA0IBywMyAf8DMgH/AzIB/wMyAf8DOAHw
        AzEBTTAAAwsBDgMyAf8DMgH/AzIB/xwAAxUBHQJMAWYB1wI4AfQB/wJeAv8CXgL/Al8C/wJfAv8CMQHt
        Af8CVQFXAbcDBgEIDAABUwFbAVYBwwEEAbcBLAH/ATMBwwFUAf8BWAHTAXgB/wFlAd0BiwH/ATIBvwFf
        AfsBUwFXAVUBsQE8AdoBbQH/AWcB5AGSAf8BXgHeAYoB/wFTAdoBegH/ASQBzwFXAf8BAAGgAScB/wNL
        AY4DAQECEAADEAEVA0IBxAMyAf8DMgH/AzIB/wMyAf8DMgH/AzIB/wMyAf8DMgFQMAADRAGUAzIB/wMy
        Af8DQAHUFAADHQEpAlABXQHQAgABpgH/AiwB8gH/AmYC/wJlAv8CZQL/AmQC/wIcAeYB/wIAAZgB/wNT
        Aa0DCwEPCAADOwFlATMBvwFMAf8BjAHcAZ4B/wGJAd4BngH/AUIB1AFoAf8BPwFAAT8BbwQAA0QBegFR
        AeABegH/AYgB5AGjAf8BggHfAZ0B/wGAAdwBlwH/AS8ByAFXAf8BAAGPARUB/wNJAYkDAQECCAADEAEV
        Az4B2AMyAf8DMgH/AzIB/wNCAcsDPgF0AzIB/wMyAf8DMgH/AzUB9QMvAUowAAM0Af0DMgH/AzIB/wMn
        ATkMAAMeASsCTwFcAdQCAAGkAf8CMgHzAf8CdAL/AnMC/wJ0Av8CdAL/AnMC/wJvAv8CIQHlAf8CAAGS
        Af8DUwGtAwwBEAgAA0ABcQFhAc4BdQH/AVkB0gFzAf8DQgF2DAABRgFHAUYBgAFmAd8BigH/AaYB5wG2
        Af8BngHhAa4B/wGdAd8BqgH/AToBvgFVAf8BAAF3AQMB/wNDAXgIAAM4AV4DMgH/AzIB/wMyAf8DQgHE
        AxYBHgQAA0IBgAMyAf8DMgH/AzIB/wM8AeQDCAEKLAADBgEIAzIB/wMyAf8DMgH/CAADFAEbAk4BWQHS
        AgABnAH/Aj0B8gH/AooC/wKJAv8CiAL/AlQBXQG8AlkBcgHUAo0C/wKIAv8ChAL/AiUB4wH/AgABiwH/
        A1ABpAMEAQUIAANDAXcDRAF6FAADSAGEAYIB3wGYAf8BxAHtAc0B/wG8AeYBxAH/AbgB5AG+Af8BRQG7
        AVUB/wFUAVsBVAHECAADEAEVAz4B2AMyAf8DPgHYAxABFQwAA0ABegM0Af0DNQH1Ay8BSjQAA0EBggMy
        Af8DMgH/AyIBMAQAAy8BSQIAAZwB/wJEAfIB/wKbAv8CmQL/ApkC/wJVAVkBsgMEAQYDGAEhAloBewHb
        Ap4C/wKZAv8ClAL/AioB5QH/AiYBbwHyAxIBGSgAAUgBSQFIAYgBmwHjAacB/wHjAfUB5gH/AeYB9gHp
        Af8BjwHWAZUB/wNIAYUMAAMQARUDOAFeAxABFRAAAwQBBgMyAVADKgE+PAADQwHAAxUBHQgAAy0BRQJQ
        Af4B/wKuAv8CqQL/AqgC/wJVAVkBsgMHAQkIAAMaASUCXwF7AdsCrwL/AqkC/wKpAv8CPwGvAfQDEAEW
        LAADSgGNAbsB6QHAAf8BtQHkAbgB/wFPAVABTwGaAwQBBoAAAwoBDQJUAVcBrgK7Av8CuwL/AlMBVgGw
        AwcBCRAAAxoBJQJfAXsB2wLIAv8CpAL/A0MBeAMBAQIvAAEBAVABUQFQAZ8BUQFTAVEBqgMDAQSIAAME
        AQYCUgFVAakCUwFXAa0DBQEHGAADGgElAlkBawHMA0EBckgAAUIBTQE+BwABPgMAASgDAAFAAwABIAMA
        AQEBAAEBBgABARYAA/+BAAT/AY8B8QL/AfcB5wL/AQcBwAH4Af8B4wHHAfgB/wEDAYAB8AF/AcEBgQHw
        AX8CAAHgAT8BwAEBAeABPwIAAcABHwHAAQMBwAE/AYABAQGAAQ8B8AEHAcIBHwHAAQMBAAEHAfgBDwHH
        AQ8B4AEHAQABAwHwAQ8B/wEPAeABBwEAAQEB4AEHAf8BhwHAAQMBAgEAAcABAwH/AcMBgAEBAYcBAAHA
        AYEB/wHDAgABzwGAAcEBwwH/AeECAAH/AcAB4wHHAf8B8wEBAYAB/wHgBP8BAwHAAf8B4QT/AYcB4wL/
        Cw==
</value>
  </data>
</root>